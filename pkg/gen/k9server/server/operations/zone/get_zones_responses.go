// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kube9/k9/pkg/gen/k9server/models"
)

// GetZonesOKCode is the HTTP code returned for type GetZonesOK
const GetZonesOKCode int = 200

/*GetZonesOK OK

swagger:response getZonesOK
*/
type GetZonesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetZonesResponse `json:"body,omitempty"`
}

// NewGetZonesOK creates GetZonesOK with default headers values
func NewGetZonesOK() *GetZonesOK {
	return &GetZonesOK{}
}

// WithPayload adds the payload to the get zones o k response
func (o *GetZonesOK) WithPayload(payload *models.GetZonesResponse) *GetZonesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get zones o k response
func (o *GetZonesOK) SetPayload(payload *models.GetZonesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetZonesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetZonesInternalServerErrorCode is the HTTP code returned for type GetZonesInternalServerError
const GetZonesInternalServerErrorCode int = 500

/*GetZonesInternalServerError Internal Server Error

swagger:response getZonesInternalServerError
*/
type GetZonesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetZonesInternalServerError creates GetZonesInternalServerError with default headers values
func NewGetZonesInternalServerError() *GetZonesInternalServerError {
	return &GetZonesInternalServerError{}
}

// WithPayload adds the payload to the get zones internal server error response
func (o *GetZonesInternalServerError) WithPayload(payload *models.ErrorResponse) *GetZonesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get zones internal server error response
func (o *GetZonesInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetZonesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
