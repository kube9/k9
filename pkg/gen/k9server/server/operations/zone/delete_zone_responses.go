// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/kube9/k9/pkg/gen/k9server/models"
)

// DeleteZoneNoContentCode is the HTTP code returned for type DeleteZoneNoContent
const DeleteZoneNoContentCode int = 204

/*DeleteZoneNoContent OK

swagger:response deleteZoneNoContent
*/
type DeleteZoneNoContent struct {
}

// NewDeleteZoneNoContent creates DeleteZoneNoContent with default headers values
func NewDeleteZoneNoContent() *DeleteZoneNoContent {
	return &DeleteZoneNoContent{}
}

// WriteResponse to the client
func (o *DeleteZoneNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteZoneNotFoundCode is the HTTP code returned for type DeleteZoneNotFound
const DeleteZoneNotFoundCode int = 404

/*DeleteZoneNotFound Not Found

swagger:response deleteZoneNotFound
*/
type DeleteZoneNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewDeleteZoneNotFound creates DeleteZoneNotFound with default headers values
func NewDeleteZoneNotFound() *DeleteZoneNotFound {
	return &DeleteZoneNotFound{}
}

// WithPayload adds the payload to the delete zone not found response
func (o *DeleteZoneNotFound) WithPayload(payload *models.ErrorResponse) *DeleteZoneNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete zone not found response
func (o *DeleteZoneNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteZoneNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteZoneInternalServerErrorCode is the HTTP code returned for type DeleteZoneInternalServerError
const DeleteZoneInternalServerErrorCode int = 500

/*DeleteZoneInternalServerError Internal Server Error

swagger:response deleteZoneInternalServerError
*/
type DeleteZoneInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewDeleteZoneInternalServerError creates DeleteZoneInternalServerError with default headers values
func NewDeleteZoneInternalServerError() *DeleteZoneInternalServerError {
	return &DeleteZoneInternalServerError{}
}

// WithPayload adds the payload to the delete zone internal server error response
func (o *DeleteZoneInternalServerError) WithPayload(payload *models.ErrorResponse) *DeleteZoneInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete zone internal server error response
func (o *DeleteZoneInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteZoneInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
